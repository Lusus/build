name: Rebuild rootfs

on:
  workflow_dispatch:
  schedule:
    - cron: "30 0 * * *"
  push:
      paths:
      - 'config/distributions/**'
      - 'config/cli/**'
      - 'config/desktop/**'

jobs:

  release-start:
    permissions:
      contents: none
    name: Release start
    runs-on: [X64]
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

      - name: Updating releases
        uses: ncipollo/release-action@v1
        with:
          repo: "mirror"
          tag: "_rootfs"
          name: "Build in progress"
          #bodyFile: ".github/Releases-wip.md"
          body: "WIP"
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.CR_PAT }}

  x86-min:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'minimal:uefi-x86'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  x86-srv:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'server:uefi-x86'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  x86-x:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'desktop:uefi-x86'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  armhf-min:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'minimal:tinkerboard'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}


  armhf-srv:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'server:tinkerboard'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  armhf-x:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
      variant: 'desktop:tinkerboard'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-min:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'minimal:uefi-arm64'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-srv:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'server:uefi-arm64'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-x:
    needs: [release-start]
    permissions:
      contents: none
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
      variant: 'desktop:uefi-arm64'

    secrets:
      PAT1: ${{ secrets.CR_PAT }}
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  jobsend:
    permissions:
      contents: none
    name: finish
    needs: [x86-min,x86-srv,x86-x,armhf-min,armhf-srv,armhf-x,arm64-min,arm64-srv,arm64-x]
    runs-on: [big]
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:

      - name: Updating releases
        uses: ncipollo/release-action@v1
        with:
          tag: "_rootfs"
          repo: "mirror"
          #bodyFile: ".github/Releases.md"
          body: "WIP"
          name: "Root fs cache"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
