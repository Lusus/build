name: Build Cache V2

on:
  workflow_dispatch:
    inputs:
      choice:
        type: choice
        description: Build targets
        options:
        - beta
        - stable
        - rc
      runner:
        type: choice
        description: Build runners for CLI
        options:
        - small
        - ubuntu-latest
      sourcerepo:
        description: Source repository
        required: true
        default: 'nightly'
      advanced:
        description: 'Single board (grep -w tinkerboard |)'
        required: false
        default: ''

jobs:

  fake:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    name: Source changes
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:
      - run: |
          echo "not empty" > changes
      - uses: actions/upload-artifact@v3
        with:
          path: changes
          name: changes
          if-no-files-found: ignore
      
  x86-min:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
 
      variant: 'minimal:uefi-x86'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: 'grep uefi-x86 | ${{ github.event.inputs.advanced }}'
      exclude: ''
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  x86-srv:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
 
      variant: 'server:uefi-x86'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: 'grep uefi-x86 | ${{ github.event.inputs.advanced }}'
      exclude: ''
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  x86-x:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'desktop:uefi-x86'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: "big"
      part: 1
      of: 1
      include: 'grep uefi-x86 | ${{ github.event.inputs.advanced }}'
      exclude: ''
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  armhf-min:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
 
      variant: 'minimal:tinkerboard'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}


  armhf-srv:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'server:tinkerboard'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  armhf-x:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
      variant: 'desktop:tinkerboard'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: "big"
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-min:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
 
      variant: 'minimal:uefi-arm64'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-srv:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:

      variant: 'server:uefi-arm64'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: '${{ github.event.inputs.runner }}'
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  arm64-x:
    permissions:
      contents: none
    needs: [ fake ]
    uses: armbian/scripts/.github/workflows/build-cache-v2.yml@master

    with:
      variant: 'desktop:uefi-arm64'
      sourcerepo: '${{ github.event.inputs.sourcerepo }}'
      runner: "big"
      part: 1
      of: 1
      include: '${{ github.event.inputs.advanced }}'
      exclude: 'grep -v uefi-x86 | '
      uploading: false

    secrets:
      GPG_KEY1: ${{ secrets.GPG_KEY1 }}
      GPG_PASSPHRASE1: ${{ secrets.GPG_PASSPHRASE1 }}
      GPG_KEY2: ${{ secrets.GPG_KEY2 }}
      GPG_PASSPHRASE2: ${{ secrets.GPG_PASSPHRASE2 }}
      SCRIPTS_ACCESS_TOKEN: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
      SSH_KEY_TORRENTS: ${{ secrets.KEY_TORRENTS }}
      KNOWN_HOSTS_UPLOAD: ${{ secrets.KNOWN_HOSTS_UPLOAD }}

  jobsend:
    permissions:
      contents: none
    name: finish
    needs: [x86-min,x86-srv,x86-x,armhf-min,armhf-srv,armhf-x,arm64-min,arm64-srv,arm64-x]
    runs-on: [ubuntu-latest]
    if: ${{ github.repository_owner == 'Armbian' }}
    steps:
      - run: |
          echo "End"
